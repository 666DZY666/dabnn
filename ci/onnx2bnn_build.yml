trigger:
  branches:
    include:
    - master
  tags:
    include:
    - v*
  paths:
    include:
    - '*'
    exclude:
    - README.md
    - docs/*
    # not trigger onnx2bnn build when only dabnn is edited
    - dabnn/*
pr:
  branches:
    include:
    - '*'
  paths:
    include:
    - '*'
    exclude:
    - README.md
    - docs/*
    # not trigger onnx2bnn build when only dabnn is edited
    - dabnn/*

jobs:
- job: Linux_AppImage
  pool:
      vmImage: 'ubuntu-16.04'
  steps:
  - checkout: self
    submodules: true
  - script: sudo apt install -y protobuf-compiler libprotobuf-dev
    displayName: Install protobuf
  - bash: ci/build_onnx2bnn.sh
    displayName: Build
  - bash: ci/build_appimage.sh
    displayName: Build AppImage
  - task: CopyFiles@2
    inputs:
        contents: 'onnx2bnn.AppImage'
        targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)
      artifactName: onnx2bnn AppImage
  - template: template_onnx2bnn_github_release.yml
- job: Windows_Python_Package
  pool:
      vmImage: 'vs2017-win2016'
  steps:
  - checkout: self
    submodules: true
  - template: template_onnx2bnn_build_python_all_version.yml
  - task: CopyFiles@2
    inputs:
      sourceFolder: '.setuptools-cmake-build\tools\onnx2bnn\Release\'
      contents: 'onnx2bnn.exe'
      targetFolder: $(Build.ArtifactStagingDirectory)
  - template: template_onnx2bnn_github_release.yml
  - script: python -m twine upload dist/* --verbose
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
    displayName: Upload wheel to PyPI
    workingDirectory: tools/onnx2bnn/python/
    env:
      TWINE_USERNAME: $(twineUsername)
      TWINE_PASSWORD: $(twinePassword)
